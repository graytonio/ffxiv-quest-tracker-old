package templates

import "github.com/graytonio/ffxivquesttracker/pkg/db"
import "fmt"

templ QuestRow(quest db.Quest) {
	<tr>
		<td>
			<div class="flex items-center gap-3">
				<div>
					<div class="font-bold">{ quest.Name }</div>
					<div class="text-sm opacity-50">{ quest.Location }</div>
				</div>
			</div>
		</td>
		<td>{ quest.Category.Section }</td>
		<td>{ quest.Category.Category }</td>
		<th>
			<label>
				<input
					type="checkbox"
					class="checkbox"
					checked?={ quest.Completed }
					hx-target="closest tr"
					hx-swap="outerHTML"
					if quest.Completed {
						hx-delete={ fmt.Sprintf("/%d", quest.ID) }
					} else {
						hx-post={ fmt.Sprintf("/%d", quest.ID) }
					}
				/>
			</label>
		</th>
	</tr>
}

templ QuestList(quests []db.Quest) {
	<table class="table">
		<thead>
			<tr>
				<th>Name</th>
				<th>Section</th>
				<th>Category</th>
				<th>Completed</th>
			</tr>
		</thead>
		<tbody>
			for _, q := range quests {
				@QuestRow(q)
			}
		</tbody>
	</table>
}

templ QuestContainer(title string, complete templ.Component) {
	<details class="collapse my-2">
		<summary class="collapse-title text-xl bg-base-200 font-medium mb-2">
			<div class="flex">
				<complete-counter class="flex-1" title={ title }></complete-counter>
				@complete
			</div>
		</summary>
		<div class="collapse-content bg-base-100">
			{ children... }
		</div>
	</details>
}

templ CompleteSectionButton(title string, resource string, complete bool) {
	<input
		type="checkbox"
		class="checkbox"
		checked?={ complete }
		hx-target="closest details"
		hx-swap="outerHTML"
		hx-vals={fmt.Sprintf(`{"key": "%s"}`, title)}
		hx-ext='json-enc'
		if complete {
			hx-delete={fmt.Sprintf("/%s", resource)}
		} else {
			hx-post={ fmt.Sprintf("/%s", resource) }
		}
	/>
}

templ QuestSection(title string, categories map[string][]db.Quest) {
	@QuestContainer(title, CompleteSectionButton(title, "section", SectionComplete(categories))) {
		for _, category := range SortKeys(categories) {
			@QuestCategory(category, categories[category])
		}
	}
}

templ QuestCategory(title string, quests []db.Quest) {
	@QuestContainer(title, CompleteSectionButton(title, "category", CategoryComplete(quests))) {
		@QuestList(quests)
	}
}

templ AuthHeader(user *db.User) {
	if user == nil {
		<a href="/auth/discord" class="btn btn-square btn-ghost">
			Login
		</a>
	} else {
		<div class="dropdown dropdown-end">
			<div tabindex="0" role="button" class="btn btn-ghost btn-circle avatar">
				<div class="w-10 rounded-full">
					<img class="rounded-full" alt="User Avatar" src={ fmt.Sprintf("https://cdn.discordapp.com/avatars/%s/%s.png", user.DiscordID, user.AvatarHash) }/>
				</div>
			</div>
			<ul tabindex="0" class="mt-3 z-[1] p-2 shadow menu menu-sm dropdown-content bg-base-100 rounded-box w-52">
				<li><a href="/logout">Logout</a></li>
			</ul>
		</div>
	}
}

templ Index(sections CategorizedQuests, user *db.User) {
	<head>
		<script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
		<script src="https://unpkg.com/htmx.org/dist/ext/json-enc.js"></script>
		<script defer src="/assets/components.js"></script>
		<link rel="stylesheet" href="/assets/styles.css"/>
	</head>
	<body>
		// Header Navbar
		<div class="navbar bg-base-100">
			<div class="flex-1">
				<a class="btn btn-ghost text-xl">FFXIV Quest Tracker</a>
			</div>
			<div class="flex-none">
				@AuthHeader(user)
			</div>
		</div>
		// Main Content
		<div class="overflow-x-auto">
			for _, section := range SortKeys(sections) {
				@QuestSection(section, sections[section])
			}
		</div>
	</body>
}
